{"version":3,"sources":["logo.svg","svg/lego.svg","svg/menu.svg","svg/maps.svg","svg/network.svg","svg/layers.svg","svg/gears.svg","components/Game.js","components/Home.js","components/Navbar.js","components/BankAppComponents/AccountGeneratorComp.js","components/BankAppComponents/TransactBarComp.js","components/BankAppComponents/AccountCardComp.js","components/BankAppComponents/AccountEnquiryComp.js","business/Account.js","components/BankAppComponents/BankAppComp.js","components/City_CommunityAppComponents/CityGeneratorComp.js","components/City_CommunityAppComponents/CitySearchComp.js","components/City_CommunityAppComponents/CityEnquiryComp.js","components/City_CommunityAppComponents/CityCardComp.js","components/City_CommunityAppComponents/CityMapComp.js","business/City_Community.js","components/City_CommunityAppComponents/CityAppComp.js","components/LinkedListComponents/LLControlComp.js","components/LinkedListComponents/LLVisualDisplayComp.js","components/LinkedListComponents/LLDataDisplayComp.js","business/LinkedList.js","components/LinkedListComponents/LinkedListAppCom.js","components/QueueStackComponents/FIFODisplayComp.js","components/QueueStackComponents/LIFODisplayComp.js","business/QueueStack.js","components/QueueStackComponents/QueueStackAppComp.js","contexts/ThemeContext.js","contexts/AuthContext.js","components/ContextAppComponents/NavBarComp.js","components/ContextAppComponents/BookListComp.js","components/ContextAppComponents/ThemeToggleComp.js","components/ContextAppComponents/HeadingComp.js","components/ContextAppComponents/ContextAppComp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","Home","src","logo","alt","href","target","rel","Navbar","style","display","justifyContent","id","lego","menu","maps","network","layers","gears","AccountGenerator","onChange","acctNameChange","acctNameValue","acctTypeChange","acctTypeValue","createAcct","TransactBar","placeholder","trxFromSelected","readOnly","type","required","TrxAmountInput","trxAmount","handleDeposit","handleWithdraw","AccountCard","eachAccountCard","details","items","index","AccountInfo","retrieveAccount","acctType","name","balance","AccountEnquiry","totalBalance","highestBalance","lowestBalance","enquiryResponse","deleteRetrieved","deleteSelectedAcct","Account","allAccounts","console","log","amt","amount","parseFloat","_isPositive","toFixed","_isAllowed","AccountController","bankaccounts","counter","k","nextKey","account","push","getAccount","deposit","withdraw","splice","total","max","min","BankApp","handleCreateAcct","myAcctController","createAccount","acctName","AllAccountsDetails","accountTypeExists","handleAcctNameChange","e","handleAcctTypeChange","handleTrxAmount","idTrxAmount","handleRetrieveAccount","idTrxFrom","handleRetrieveForDelete","idDelAcct","handleTotalBalance","idEnquiryResult","handleHighestBalance","highest","getHighestBalance","handleLowestBalance","lowest","getLowestBalance","handleDeleteSelectedAcct","alert","performDelete","retrieveForDelete","CityGenerator","cityName","latitude","longitude","population","createCity","CitySearch","selectToDelete","delete","CityEnquiry","selectedCity","movements","movedInMovedOut","migration","CityCard","eachCityCard","cities","item","CityInfo","retrieveCity","CityMap","source","title","width","height","frameBorder","scrolling","marginHeight","marginWidth","City","cityname","arr","string","immigrants","Number","exits","Community","newCity","url","allCities","fetch","cityData","json","city","checkbox","postData","data","lat","long","popu","addCityToServer","cityFinder","arrCityLat","indexOf","Math","movedIn","movedOut","jindex","toString","getKey","deleteCity","response","URL","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","statusText","CityApp","checkBox","checked","handleCreateCity","myCommunity","handleCityName","handleLatitude","handleLongitude","handlePopulation","handleMigration","handleMovements","size","myCity","howBig","sphere","whichSphere","northMost","getMostNorthern","southMost","getMostSouthern","getCityPopulation","newPopulation","handleRetrieveCity","handleDelete","getCities","gridTemplateColumns","LLControl","input","submit","nodePosition","selectedValue","selectChange","operations","positionChange","LLVisualDisplay","LLDataDisplay","Node","next","LinkedList","head","node","previous","count","list","myLL","LinkedListApp","useState","inputValue","setInputValue","select","setSelect","setNodePosition","linkedListValues","setLinkedListValues","insertLast","selectValue","insertAt","removeAt","getAt","printListData","insertFirst","clearList","allData","myLinkedList","linkedList","FIFODisplay","queueElement","queueDetails","EachQueueElement","elementPositionInQueue","queueElementValue","newQueueElement","enqueue","dequeue","appear","durationAppear","component","LIFODisplay","stackElement","stackDetails","EachStackElement","elementPositionInStack","stackElementValue","newStackElement","addToStack","popFromStack","peekStack","peeked","leave","Stack","storage","allStackElements","element","removed","pop","Queue","tail","allQueueElements","shift","QueueStackApp","handleNewStackElement","handleNewQueueElement","onClickQueue","handleEnqueue","increment","myQueue","queueContent","handleDequeue","handleAddToStack","myStack","stackContent","handlePopFromToStack","handlePeekStack","peekElement","peek","ThemeContext","createContext","ThemeContextProvider","isLightTheme","light","textcolor","userinterface","bkground","dark","handleToggleTheme","Provider","toggleTheme","children","AuthContext","AuthContextProvider","isAuthenticated","handleToggleAuth","toggleAuth","NavBar","useContext","theme","background","color","BookList","ThemeToggle","Heading","ContextApp","App","getValue","bind","event","idHome","document","getElementById","idGame","idAccount","idCity","idLinkedList","idQueueStack","idContext","BankAppComp","CityAppComp","LinkedListAppCom","QueueStackAppComp","ContextAppComp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3f992d6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.26ef1cbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/lego.c82248fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.4539f408.svg\";","module.exports = __webpack_public_path__ + \"static/media/maps.ffea6d34.svg\";","module.exports = __webpack_public_path__ + \"static/media/network.568909dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/layers.cd57358f.svg\";","module.exports = __webpack_public_path__ + \"static/media/gears.0844b197.svg\";","import React from \"react\";\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\"\r\n            onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)} />\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                \"Go to move #\" + move :\r\n                \"Go to game start\";\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner;\r\n        } else {\r\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n        return (\r\n            <div className=\"clGameContainer\"> {/*inserted by me */}\r\n                <h1>Tic-Tac-Toe</h1>    {/*inserted by me */}\r\n                <div className=\"game\">\r\n                    <div className=\"game-board\">\r\n                        <Board squares={current.squares}\r\n                            onClick={(i) => this.handleClick(i)} />\r\n                    </div>\r\n                    <div className=\"game-info\">\r\n                        <div className = \"player\">{status}</div>  {/*clasName inserted by me */}\r\n                        <ol>{moves}</ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ReactDOM.render(\r\n//     <Game />, document.getElementById(\"root\")\r\n// );\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport default Game","import React from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\n\n// function App() {\nclass Home extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Hello World</h1>\n          <p>{this.props.value}</p>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n        </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >Learn React</a>\n        </header>\n      </div>\n    );\n  }\n};\nexport default Home;\n","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport lego from '../svg/lego.svg';\r\nimport menu from '../svg/menu.svg';\r\nimport maps from '../svg/maps.svg';\r\nimport network from '../svg/network.svg';\r\nimport layers from '../svg/layers.svg';\r\nimport gears from '../svg/gears.svg';\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"clImages\"><img src={logo} className=\"My-logo\" id=\"id-reactlogo\" alt=\"react-logo\" onClick={this.props.onClick} /></div>\r\n                <div className=\"clImages\"><img src={lego} className=\"My-logo\" id=\"id-lego\" alt=\"lego-logo\" onClick={this.props.onClick} /></div>\r\n                <div className=\"clImages\"><img src={menu} className=\"My-logo-rev\" id=\"id-menu\" alt=\"menu-logo\" onClick={this.props.onClick} /></div>\r\n                <div className=\"clImages\"><img src={maps} className=\"My-logo\" id=\"id-maps\" alt=\"maps-logo\" onClick={this.props.onClick} /></div>\r\n                <div className=\"clImages\"><img src={network} className=\"My-logo\" id=\"id-network\" alt=\"network-logo\" onClick={this.props.onClick} /></div>\r\n                <div className=\"clImages\"><img src={layers} className=\"My-logo\" id=\"id-layers\" alt=\"layers-logo\" onClick={this.props.onClick} /></div>\r\n                <div className=\"clImages\"><img src={gears} className=\"My-logo\" id=\"id-gears\" alt=\"gears-logo\" onClick={this.props.onClick} /></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Navbar","import React from 'react';\r\n\r\nclass AccountGenerator extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"clAcctGen\">\r\n                <h1 id=\"h1\">Welcome!</h1>\r\n                <div id=\"idAcctGen\">\r\n                    <p>Get New Account</p>\r\n                    <span className=\"clSpan\">\r\n                        Enter Account Name <input id=\"acctName\" onChange={this.props.acctNameChange} value={this.props.acctNameValue} />\r\n                        Enter Account Type <input id=\"acctType\" onChange={this.props.acctTypeChange} value={this.props.acctTypeValue} />\r\n                    </span>\r\n                    <button id=\"createAcct\" className=\"clBtn\" onClick={this.props.createAcct}>Create Account</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AccountGenerator","import React from 'react';\r\n\r\nclass TransactBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"clTransactBar\">\r\n                <div id=\"idTrxBar\">\r\n                    {/* z<span>Account <select id=\"dropdownTrxn\" name=\"acctsTrxn\"></select> */}\r\n                    <span className=\"clSpan\">\r\n                        <input id=\"idTrxFrom\" placeholder=\"Select Account\" value={this.props.trxFromSelected} readOnly />\r\n                        <input id=\"idTrxAmount\" type=\"number\" required placeholder=\"Enter Amount\" onChange={this.props.TrxAmountInput} value={this.props.trxAmount} />\r\n                    </span>\r\n                    <button id=\"idDeposit\" className=\"clBtn\" onClick={this.props.handleDeposit}>Deposit</button>\r\n                    <button id=\"idWithdraw\" className=\"clBtn\" onClick={this.props.handleWithdraw}>Withdraw</button>\r\n                    {/* </span> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TransactBar","import React from 'react';\r\n\r\nclass AccountCard extends React.Component {\r\n\r\n    render() {\r\n        const eachAccountCard = this.props.details.map((items, index) => //\r\n            <AccountInfo key={index} value={items} retrieveAccount={this.props.retrieveAccount} />\r\n        )\r\n        return (\r\n            <div className=\"clAcctCard\">\r\n                {eachAccountCard}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AccountCard\r\n\r\nfunction AccountInfo(props) { //This component returns the account info card\r\n    return (\r\n        <div id={props.value.acctType} className=\"clAcctInfoCard\" onClick={props.retrieveAccount} >\r\n            <p>Name: {props.value.name}</p>\r\n            <p>Type: {props.value.acctType}</p>\r\n            <p>Balance: {props.value.balance}</p>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\n//import React, {Component} from 'react'; //Alternative to line 1. Then no need to use 'React.' on line 5, just Component\r\n\r\n\r\nclass AccountEnquiry extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"clAccountEnquiry\">\r\n                <div id=\"idAcctEnquiry\">\r\n                    {/* <span className=\"clButtons\">*/}\r\n                    <button id=\"idTotalBal\" className=\"clBtn\" onClick={this.props.totalBalance}>Total Balance</button>\r\n                    <button id=\"idHighestBal\" className=\"clBtn\" onClick={this.props.highestBalance}>Highest Balance</button>\r\n                    <button id=\"idLowestBal\" className=\"clBtn\" onClick={this.props.lowestBalance}>Lowest Balance</button>\r\n                    {/* </span> */}\r\n                    <p id=\"idEnquiryResult\">{this.props.enquiryResponse}</p>\r\n                    <p className=\"clRedFonts\">Warning!!! Selected account will be deleted</p>\r\n                    <input id=\"idDelAcct\" placeholder=\"Select to Delete\" value={this.props.deleteRetrieved} readOnly />\r\n                    <button id=\"idDeleteAcct\" className=\"clBtnRed\" onClick={this.props.deleteSelectedAcct}>Delete Account</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AccountEnquiry","class Account {\r\n    constructor(key, name, acctType, balance) {\r\n        this.key = key\r\n        this.name = name;\r\n        this.acctType = acctType;\r\n        this.balance = balance;\r\n    }\r\n\r\n    updateAccount(name, acctType) {\r\n        let index = 0;\r\n        for (let i = 0; i < this.allAccounts.length; i++) {\r\n            if (name === this.allAccounts[i].name) {\r\n                index = i\r\n            }\r\n        } this.allAccounts[index][`${acctType}`] = 0\r\n        console.log(this.allAccounts);\r\n    }\r\n\r\n    deposit(amt) {\r\n        let amount = parseFloat(amt);\r\n        if (!this._isPositive(amount)) {\r\n            // console.log(`Deposit: ${this.name} new balance is ${this.balance}`);\r\n            return \"Amount entered is negative\";\r\n        } else return (this.balance += amount).toFixed(2);\r\n    }\r\n\r\n    withdraw(amt) {\r\n        let amount = parseFloat(amt);\r\n        if (this._isAllowed(amount)) {\r\n            this.balance -= amount;\r\n            // console.log(`Withdraw: ${this.name} new balance is ${this.balance}`);\r\n            return (this.balance).toFixed(2);\r\n        } else if (amount < 0) {\r\n            return \"Amount is negative\"\r\n        } else if (!this._isAllowed(amount)) {\r\n            return \"Insufficient balance\";\r\n        }\r\n    }\r\n\r\n    _isPositive(amount) {\r\n        if (amount < 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    _isAllowed(amount) {\r\n        if (this._isPositive(amount) && this.balance - amount >= 0) {\r\n            return true;\r\n        } else return false;\r\n    }\r\n}\r\n\r\nclass AccountController {\r\n    constructor() {\r\n        this.bankaccounts = [];\r\n        this.counter = 1;\r\n    }\r\n\r\n    nextKey() {\r\n        const k = \"k\" + this.counter;\r\n        this.counter = this.counter + 1;\r\n        return k;\r\n    }\r\n\r\n    createAccount(name, acctType, balance) {\r\n        const key = this.nextKey();\r\n        const account = new Account(key, name, acctType, balance);\r\n        this.bankaccounts.push(account)\r\n        return key;\r\n    }\r\n\r\n    getAccount(key) {\r\n        for (var i = 0; i < this.bankaccounts.length; i++) {\r\n            if (key === this.bankaccounts[i].key) {\r\n                return this.bankaccounts[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    performDeposit(key, amt) {\r\n        const SelectedAcct = this.getAccount(key);\r\n        SelectedAcct.deposit(amt);\r\n    }\r\n\r\n    performWithdraw(key, amt) {\r\n        const SelectedAcct = this.getAccount(key);\r\n        SelectedAcct.withdraw(amt);\r\n    }\r\n\r\n    performDelete(account) {\r\n        for (let i = 0; i < this.bankaccounts.length; i++) {\r\n            if (account === this.bankaccounts[i].acctType) {\r\n                this.bankaccounts.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // performDelete(account) {    //Use this method for multi-user situation //\r\n    //     let account = this.getAccount(key);\r\n    //     //console.log(account);\r\n    //     let index = this.bankaccounts.indexOf(account)\r\n    //     //console.log(index);\r\n    //     this.bankaccounts.splice(index, 1);\r\n    //     //console.log(this.bankaccounts);\r\n    // }\r\n\r\n    totalBalance() {\r\n        //let total = this.bankaccounts.reduce(function (a, b) { return a + b.balance }, 0); //OR use\r\n        let total = 0;\r\n        for (var i = 0; i < this.bankaccounts.length; i++) {\r\n            total += this.bankaccounts[i].balance;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    getHighestBalance() {\r\n        let max = 0; // assuming 'max' to be zero will fail if there are -ve balances\r\n        for (var i = 0; i < this.bankaccounts.length; i++) {\r\n            if (this.bankaccounts[i].balance > max) {\r\n                max = this.bankaccounts[i].balance;\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    getLowestBalance() {\r\n        let min = this.bankaccounts[0].balance;\r\n        for (var i = 1; i < this.bankaccounts.length; i++) {\r\n            if (this.bankaccounts[i].balance < min) {\r\n                min = this.bankaccounts[i].balance;\r\n            }\r\n        }\r\n        return min;\r\n    }\r\n\r\n    accountNameExists(name) {\r\n        for (let i = 0; i < this.bankaccounts.length; i++) {\r\n            if (name === this.bankaccounts[i].name) {\r\n                return true\r\n            }\r\n        } return false\r\n    }\r\n\r\n    accountTypeExists(type) {\r\n        for (let i = 0; i < this.bankaccounts.length; i++) {\r\n            if (type === this.bankaccounts[i].acctType) {\r\n                return true\r\n            }\r\n        } return false\r\n    }\r\n};\r\nexport { Account, AccountController };\r\n\r\n/*\r\nclass AccountController\r\nwrite the tests\r\nadd an account and write test\r\nimplement the key\r\ndeposit with a key\r\nwithdraw with key\r\ndelete account with key\r\n*/\r\n","import React from 'react';\r\nimport AccountGenerator from \"./AccountGeneratorComp.js\"\r\nimport TransactBar from \"./TransactBarComp.js\"\r\nimport AccountCard from './AccountCardComp.js';\r\nimport AccountEnquiry from './AccountEnquiryComp.js';\r\nimport { AccountController } from '../../business/Account.js';\r\nimport './BankApp.css';\r\n\r\nclass BankApp extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            AllAccountsDetails: [],\r\n            acctName: \"\",\r\n            acctType: \"\",\r\n            idTrxFrom: \"\",\r\n            idTrxAmount: \"\",\r\n            idDelAcct: \"\",\r\n            idEnquiryResult: \"\"\r\n        }\r\n        this.myAcctController = new AccountController();\r\n        //If not using arrow functions for the methods below, you should bind them to the constructor here as follows eg this.handleCreateAcct = this.handleCreateAcct.bind(this);\r\n    }\r\n\r\n    handleCreateAcct = () => {\r\n        if (this.myAcctController.bankaccounts.length === 0) {\r\n            //let key = this.myAcctController.createAccount(this.state.acctName, this.state.acctType, 0); //figure how to use this key in creating other accounts\r\n            this.myAcctController.createAccount(this.state.acctName, this.state.acctType, 0);\r\n            this.setState({\r\n                AllAccountsDetails: this.myAcctController.bankaccounts, acctName: \"\", acctType: \"\"\r\n            })\r\n            console.log(this.myAcctController.bankaccounts);\r\n            //console.log(key)\r\n        }\r\n\r\n        else {\r\n            if (this.myAcctController.accountTypeExists(this.state.acctType)) {\r\n                return\r\n\r\n            }\r\n            else if (this.myAcctController.accountTypeExists(this.state.acctType) === false) {\r\n                this.myAcctController.createAccount(this.state.acctName, this.state.acctType, 0)\r\n                this.setState({\r\n                    AllAccountsDetails: this.myAcctController.bankaccounts\r\n                })\r\n                console.log(this.myAcctController.bankaccounts);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleAcctNameChange = (e) => {\r\n        this.setState({\r\n            acctName: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAcctTypeChange = (e) => {\r\n        this.setState({\r\n            acctType: e.target.value\r\n        })\r\n    }\r\n\r\n    handleTrxAmount = (e) => {\r\n        this.setState({\r\n            idTrxAmount: e.target.value\r\n        })\r\n    }\r\n\r\n    handleRetrieveAccount = (e) => {\r\n        this.setState({\r\n            idTrxFrom: e.target.id\r\n        })\r\n        console.log(e.target.id);\r\n    }\r\n\r\n    handleRetrieveForDelete = (e) => { //This method was no longer used // handleRetrieveAccount sufficed //\r\n        this.setState({\r\n            idDelAcct: e.target.id\r\n        })\r\n    }\r\n\r\n    handleDeposit = () => {\r\n        for (var i = 0; i < this.myAcctController.bankaccounts.length; i++) {\r\n            if (this.state.idTrxFrom === this.myAcctController.bankaccounts[i].acctType) {\r\n                this.myAcctController.bankaccounts[i].deposit(this.state.idTrxAmount)\r\n            }\r\n            this.setState({\r\n                AllAccountsDetails: this.myAcctController.bankaccounts, idTrxAmount: \"\", idTrxFrom: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleWithdraw = () => {\r\n        for (var i = 0; i < this.myAcctController.bankaccounts.length; i++) {\r\n            if (this.state.idTrxFrom === this.myAcctController.bankaccounts[i].acctType) {\r\n                this.myAcctController.bankaccounts[i].withdraw(this.state.idTrxAmount)\r\n            }\r\n            this.setState({\r\n                AllAccountsDetails: this.myAcctController.bankaccounts, idTrxAmount: \"\", idTrxFrom: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handleTotalBalance = () => {\r\n        let total = this.myAcctController.totalBalance()\r\n        this.setState({\r\n            idEnquiryResult: `Your total balance is: $${total}` // OR \"Your total balance is: \" + \"$\" + total //React prefers string literals\r\n        })\r\n    }\r\n\r\n    handleHighestBalance = () => {\r\n        let highest = this.myAcctController.getHighestBalance()\r\n        this.setState({\r\n            idEnquiryResult: `Your highest balance is: $${highest}` // OR \"Your highest balance is: \" + \"$\" + highest //React prefers string literals\r\n        })\r\n    }\r\n\r\n    handleLowestBalance = () => {\r\n        let lowest = this.myAcctController.getLowestBalance()\r\n        this.setState({\r\n            idEnquiryResult: `Your lowest balance is: $${lowest}` // OR \"Your lowest balance is: \" + \"$\" + lowest //React prefers string literals\r\n        })\r\n    }\r\n\r\n    handleDeleteSelectedAcct = () => {\r\n        for (let i = 0; i < this.myAcctController.bankaccounts.length; i++)\r\n            if (this.state.idTrxFrom === this.myAcctController.bankaccounts[i].acctType) {\r\n                if (this.myAcctController.bankaccounts[i].balance > 0) {\r\n                    alert(\"Zerorise account before deletion\")\r\n                }\r\n                else if (this.myAcctController.bankaccounts[i].balance === 0) {\r\n                    this.myAcctController.performDelete(this.state.idTrxFrom)   //idTrxFrom and IdDelAcct receive the same value however idDelAcct has no value in state hence using idTrxFrom\r\n                }\r\n                this.setState({\r\n                    AllAccountsDetails: this.myAcctController.bankaccounts\r\n                })\r\n            }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clAcctContainer\">\r\n                <AccountGenerator createAcct={this.handleCreateAcct} acctNameChange={this.handleAcctNameChange} acctTypeChange={this.handleAcctTypeChange} acctNameValue={this.state.acctName} acctTypeValue={this.state.acctType} />\r\n                <TransactBar trxFromSelected={this.state.idTrxFrom} TrxAmountInput={this.handleTrxAmount} handleDeposit={this.handleDeposit} handleWithdraw={this.handleWithdraw} trxAmount={this.state.idTrxAmount} />\r\n                <AccountCard details={this.state.AllAccountsDetails} retrieveAccount={this.handleRetrieveAccount} retrieveForDelete={this.handleRetrieveForDelete} />\r\n                <AccountEnquiry enquiryResponse={this.state.idEnquiryResult} totalBalance={this.handleTotalBalance} highestBalance={this.handleHighestBalance} lowestBalance={this.handleLowestBalance} deleteRetrieved={this.state.idTrxFrom} deleteSelectedAcct={this.handleDeleteSelectedAcct} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BankApp","import React from 'react';\r\n\r\nclass CityGenerator extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"clCityGen\">\r\n                <h1 id=\"h1\">City and Community</h1>\r\n                <div id=\"idCityGen\">\r\n                    <p>Create New City</p>\r\n                    <span className=\"clSpan\">\r\n                        City Name <input id=\"idCityName\" onChange={this.props.cityName} />\r\n                        Latitude <input id=\"idLat\" onChange={this.props.latitude} />\r\n                        Longitude <input id=\"idLong\" onChange={this.props.longitude} />\r\n                        Population <input id=\"idPop\" onChange={this.props.population} />\r\n                        <label><input id=\"idCheckBox\" type=\"checkbox\" onChange={this.props.onChange} /> Save to Server</label>\r\n                    </span>\r\n                    <button id=\"createCity\" className=\"clBtn\" onClick={this.props.createCity}>Create City</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CityGenerator","import React from 'react';\r\n\r\nclass CitySearch extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"clCitySearch\">\r\n                <div id=\"idCitySearch\">\r\n                    <span className=\"clSpan\">\r\n                        <p className=\"clRedFonts\">Warning!!! Selected city will be deleted</p>\r\n                        <input id=\"idSelectCity\" placeholder=\"Select City to Delete\" value={this.props.selectToDelete} readOnly />\r\n                    </span>\r\n                    <button id=\"idDelete\" className=\"clBtn\" onClick={this.props.delete}>Delete</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CitySearch","import React from 'react';\r\n//import React, {Component} from 'react'; //Alternative to line 1. Then no need to use 'React.' on line 5, just Component\r\n\r\n\r\nclass CityEnquiry extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clCityEnquiry\">\r\n                <div id=\"idCityEnquiry\">\r\n                    <input id=\"idInputShow\" placeholder=\"Choose City to View Details\" value={this.props.selectedCity} readOnly /><br />\r\n                    {/* <button id=\"idShow\" className=\"clBtn\" onClick={this.props.movements}>Show City</button> */} {/*useless functionality as info is already in infocard*/}\r\n                    <button id=\"idMovedIn\" className=\"clBtn\" onClick={this.props.movements}>Moved In</button>\r\n                    <input id=\"idMoveInMovedOut\" type=\"number\" value={this.props.movedInMovedOut} onChange={this.props.migration} />\r\n                    <button id=\"idMovedOut\" className=\"clBtn\" onClick={this.props.movements}>Moved Out</button>\r\n                    <button id=\"idHowBig\" className=\"clBtn\" onClick={this.props.movements}>How Big</button>\r\n                    <button id=\"idWhichSphere\" className=\"clBtn\" onClick={this.props.movements} >Which Sphere</button>\r\n                    {/* <button id=\"idGetPopulation\" className=\"clBtn\" onClick={this.handleEnquiryResponse}>Get Population</button><br /> */} {/*useless functionality as info is already in infocard*/}\r\n                    <button id=\"idMostNorthern\" className=\"clBtn\" onClick={this.props.movements}>Most Northern</button>\r\n                    <button id=\"idMostSouthern\" className=\"clBtn\" onClick={this.props.movements}>Most Southern</button>\r\n                    <p id=\"idEnquiryResult\">{this.props.enquiryResponse}</p>\r\n\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\nexport default CityEnquiry","import React from 'react';\r\n\r\nclass CityCard extends React.Component {\r\n    render() {\r\n        const eachCityCard = this.props.cities.map((item, index) => //\r\n            // const eachCityCard = this.props.cities.map((item) => //\r\n            <CityInfo key={index} value={item} retrieveCity={this.props.retrieveCity} />\r\n            // <CityInfo key={item.counter} value={item.city} retrieveCity={this.props.retrieveCity} />\r\n        )\r\n        return (\r\n            <div className=\"clCityCard\">\r\n                {eachCityCard}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CityCard\r\n\r\nfunction CityInfo(props) { //This component returns the city info card\r\n    return (\r\n        <div id={props.value.name} className=\"clCityInfoCard\" onClick={props.retrieveCity}>\r\n            <div className=\"clCardHover\">\r\n                <p>Name: {props.value.name}</p>\r\n                <p>Latitude: {props.value.latitude}</p>\r\n                <p>Longitude: {props.value.longitude}</p>\r\n                <p>Population: {props.value.population}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\n\r\nclass CityMap extends React.Component {\r\n    render() {\r\n        let source = `https://maps.google.com/maps?q=${this.props.selectedCity}&t=&z=13&ie=UTF8&iwloc=&output=embed`\r\n        return (\r\n            <div className=\"clCityMap\">\r\n                <div className=\"mapouter\">\r\n                    <div className=\"gmap_canvas\">\r\n                        <iframe title={this.props.selectedCity} src={source} id=\"map\" width=\"300\" height=\"250\" frameBorder=\"0\" scrolling=\"no\" marginHeight=\"0\" marginWidth=\"0\">\r\n                        </iframe>\r\n                    </div>\r\n                </div >\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CityMap","export class City {\r\n    constructor(key, name, latitude, longitude, population) {\r\n        this.key = key\r\n        this.name = name;\r\n        this.latitude = latitude;\r\n        this.longitude = longitude;\r\n        this.population = population;\r\n    }\r\n\r\n    show(cityname, arr) {\r\n        let index;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (cityname === arr[i].name) {\r\n                index = i\r\n            }\r\n        }\r\n        let string = arr[index];\r\n\r\n        return `${string.name} is located at latitude ${parseFloat(string.latitude).toFixed(2)} and longitude ${parseFloat(string.longitude).toFixed(2)} and has a population of about ${string.population}`;\r\n    }\r\n\r\n    movedIn(population, immigrants) {\r\n        return population + Number(immigrants);\r\n    }\r\n\r\n    movedOut(population, exits) {\r\n        return population - Number(exits);\r\n    }\r\n\r\n    howBig(cityname, arr) {\r\n        let index;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (cityname === arr[i].name) {\r\n                index = i\r\n            }\r\n        }\r\n\r\n        if (arr[index].population > 100000) {\r\n            return `${arr[index].name} is a City`;\r\n        } else if (arr[index].population > 19999 && arr[index].population <= 100000) {\r\n            return `${arr[index].name} is a Large Town`;\r\n        } else if (arr[index].population > 999 && arr[index].population <= 19999) {\r\n            return `${arr[index].name} is a Town`;\r\n        } else if (arr[index].population > 100 && arr[index].population <= 999) {\r\n            return `${arr[index].name} is a Village`;\r\n        } else {\r\n            return `${arr[index].name} is a Hamlet`;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Community {\r\n    constructor() {\r\n        this.newCity = new City();\r\n        this.url = \"http://127.0.0.1:5000/\";\r\n        this.allCities = [];\r\n    }\r\n\r\n    nextKey() {\r\n        return this.allCities.length;\r\n    }\r\n\r\n    async getCities(url = '', data = {}) {\r\n        let cityData = await fetch(\"http://127.0.0.1:5000/clear\");\r\n        cityData = await fetch(\"http://127.0.0.1:5000/load\");\r\n        cityData = await fetch(\"http://127.0.0.1:5000/all\");\r\n        let city = await cityData.json();\r\n        for (let i = 0; i < city.length; i++) {\r\n            this.allCities.push(city[i]);\r\n        }\r\n        return city;\r\n    }\r\n\r\n    async addCityToServer(city, checkbox) {\r\n        if (checkbox) {\r\n            let data = await this.postData(this.url + \"add\", city);\r\n            data = await this.postData(this.url + \"save\", city);\r\n            data = await fetch(\"http://127.0.0.1:5000/all\")\r\n            let allCities = await data.json();\r\n            return allCities;\r\n        } else {\r\n            let data = await this.postData(this.url + \"add\", city);\r\n            data = await fetch(\"http://127.0.0.1:5000/all\")\r\n            let allCities = await data.json();\r\n            return allCities;\r\n        }\r\n\r\n    }\r\n\r\n    async createCity(name, latitude, longitude, population, checkbox) {\r\n        let key = this.nextKey();\r\n        let lat = Number(latitude);\r\n        let long = Number(longitude);\r\n        let popu = Number(population);\r\n\r\n        let city = new City(++key, name, lat, long, popu);\r\n        // city.name = name;\r\n        // city.latitude = Number(latitude);\r\n        // city.longitude = Number(longitude);\r\n        // city.population = Number(population);\r\n        // city.key = ++key;\r\n        //console.log(city.key)\r\n        this.allCities.push(city);\r\n        this.addCityToServer(city, checkbox);\r\n        return city\r\n    }\r\n\r\n    cityFinder(cityname, arr) {\r\n        let index;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (cityname === arr[i].name) {\r\n                index = i\r\n            }\r\n        }\r\n        return arr[index];\r\n    }\r\n\r\n    whichSphere(cityname, arr) {\r\n        let lat = this.cityFinder(cityname, arr).latitude;\r\n        if (lat > 0) {\r\n            return `This location is in the Northern Hemisphere`;\r\n        } else if (lat < 0) {\r\n            return `This location is in the Southern Hemisphere`;\r\n        } else {\r\n            return \"This location is on the equator\";\r\n        }\r\n    }\r\n    getMostNorthern(arr) {\r\n        let arrCityLat = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arrCityLat[i] = arr[i].latitude;\r\n        }\r\n        let cityIndex = arrCityLat.indexOf(Math.max(...arrCityLat));\r\n        return arr[cityIndex].name;\r\n    }\r\n\r\n    getMostSouthern(arr) {\r\n        let arrCityLat = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arrCityLat[i] = arr[i].latitude;\r\n        }\r\n        let cityIndex = arrCityLat.indexOf(Math.min(...arrCityLat));\r\n        return arr[cityIndex].name;\r\n    }\r\n\r\n    getPopulation(city, arr) {\r\n        let index;\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (city === arr[i].name) {\r\n                index = i\r\n            }\r\n        }\r\n        return arr[index].population;\r\n    }\r\n\r\n    increasePopulation(cityname, amount) {\r\n        this.cityFinder(cityname).population = this.newCity.movedIn(this.cityFinder(cityname).population, amount);\r\n        return this.cityFinder(cityname).population;\r\n    }\r\n\r\n    decreasePopulation(cityname, amount) {\r\n        this.cityFinder(cityname).population = this.newCity.movedOut(this.cityFinder(cityname).population, amount);\r\n        return this.cityFinder(cityname).population;\r\n    }\r\n\r\n    async deleteCity(cityname, arr) {\r\n        let index, jindex;\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (cityname === arr[i].name) {\r\n                index = i\r\n            }\r\n        }\r\n        jindex = (this.allCities[index].key).toString();\r\n        console.log(jindex);\r\n\r\n        const getKey = this.allCities[index];\r\n        let deleteCity = await this.postData(this.url + 'delete', getKey);\r\n        deleteCity = await fetch(this.url + 'all');\r\n        let response = await deleteCity.json();\r\n        console.log(response);\r\n\r\n        arr.splice(index, 1);\r\n        return arr;\r\n    }\r\n    async postData(URL = '', data = {}) { //postData can be used to GET or POST data. if the parameter required is only a url, it is getting. if a url and another parameter, it is posting\r\n        // Default options are marked with *\r\n        const response = await fetch(URL, {\r\n            method: 'POST',     // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors',       // no-cors, *cors, same-origin\r\n            cache: 'no-cache',  // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow',         // manual, *follow, error\r\n            referrer: 'no-referrer',    // no-referrer, *client\r\n            body: JSON.stringify(data)  // body data type must match \"Content-Type\" header\r\n        });\r\n\r\n        const json = await response.json();    // parses JSON response into native JavaScript objects\r\n        json.status = response.status;\r\n        json.statusText = response.statusText;\r\n        // console.log(json, typeof(json));\r\n        return json;\r\n    }\r\n};\r\n// export default {Community, City}; //this collective export method is an alternative to the private export method used in this file. both are valid.","import React from 'react';\r\nimport CityGenerator from './CityGeneratorComp.js';\r\nimport CitySearch from './CitySearchComp.js';\r\nimport CityEnquiry from './CityEnquiryComp.js';\r\nimport CityCard from './CityCardComp.js';\r\nimport CityMap from './CityMapComp.js';\r\nimport { Community, City } from '../../business/City_Community.js';\r\nimport './City_Community.css';\r\n\r\n\r\nclass CityApp extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cityName: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            population: \"\",\r\n            selectedCity: \"Airdrie\",\r\n            movedInMovedOut: \"\",\r\n            enquiryResponse: \"\",\r\n            cities: [],\r\n            checked: false\r\n        }\r\n        this.myCommunity = new Community();\r\n        this.myCity = new City();\r\n    }\r\n\r\n    checkBox = () => {\r\n        if (this.state.checked) {\r\n            this.setState({\r\n                checked: false\r\n            })\r\n        } else\r\n            this.setState({\r\n                checked: true\r\n            })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let newCity = await this.myCommunity.getCities();\r\n        this.setState({ cities: this.myCommunity.allCities })\r\n        console.log(newCity);\r\n    }\r\n\r\n    handleCreateCity = () => {\r\n        this.myCommunity.createCity(this.state.cityName, this.state.latitude, this.state.longitude, this.state.population, this.state.checked)\r\n        this.setState({ cities: this.myCommunity.allCities })\r\n        console.log(this.myCommunity.allCities);\r\n    }\r\n\r\n    handleCityName = (e) => {\r\n        this.setState({\r\n            cityName: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLatitude = (e) => {\r\n        this.setState({\r\n            latitude: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLongitude = (e) => {\r\n        this.setState({\r\n            longitude: e.target.value\r\n        })\r\n    }\r\n\r\n    handlePopulation = (e) => {\r\n        this.setState({\r\n            population: e.target.value\r\n        })\r\n    }\r\n\r\n    handleMigration = (e) => {\r\n        this.setState({\r\n            movedInMovedOut: e.target.value\r\n        })\r\n    }\r\n\r\n    handleMovements = (e) => {\r\n        if (e.target.id === \"idHowBig\") {\r\n            let size = this.myCity.howBig(this.state.selectedCity, this.myCommunity.allCities)\r\n            this.setState({ enquiryResponse: size })\r\n        } else if (e.target.id === \"idWhichSphere\") {\r\n            let sphere = this.myCommunity.whichSphere(this.state.selectedCity, this.myCommunity.allCities)\r\n            this.setState({ enquiryResponse: sphere })\r\n        } else if (e.target.id === \"idMostNorthern\") {\r\n            let northMost = this.myCommunity.getMostNorthern(this.myCommunity.allCities)\r\n            this.setState({ enquiryResponse: `${northMost} is the most northern location` })\r\n        } else if (e.target.id === \"idMostSouthern\") {\r\n            let southMost = this.myCommunity.getMostSouthern(this.myCommunity.allCities)\r\n            this.setState({ enquiryResponse: `${southMost} is the most southern location` })\r\n        }\r\n\r\n        else if (e.target.id === \"idMovedOut\") {\r\n            let getCityPopulation = this.myCommunity.cityFinder(this.state.selectedCity, this.myCommunity.allCities).population;\r\n\r\n            let newPopulation = this.myCity.movedOut(getCityPopulation, this.state.movedInMovedOut);\r\n            this.myCommunity.cityFinder(this.state.selectedCity, this.myCommunity.allCities).population = newPopulation\r\n            this.setState({ enquiryResponse: `The current population of ${this.state.selectedCity} is ${newPopulation}`, cities: this.myCommunity.allCities })\r\n        }\r\n        else if (e.target.id === \"idMovedIn\") {\r\n            let getCityPopulation = this.myCommunity.cityFinder(this.state.selectedCity, this.myCommunity.allCities).population;\r\n            let newPopulation = this.myCity.movedIn(getCityPopulation, this.state.movedInMovedOut);\r\n            this.myCommunity.cityFinder(this.state.selectedCity, this.myCommunity.allCities).population = newPopulation\r\n            this.setState({ enquiryResponse: `The current population of ${this.state.selectedCity} is ${newPopulation}`, cities: this.myCommunity.allCities })\r\n        }\r\n        //you can set more than one state variable in one setState object\r\n    }\r\n\r\n    handleRetrieveCity = (e) => {\r\n        this.setState({ selectedCity: e.target.id })\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.myCommunity.deleteCity(this.state.selectedCity, this.myCommunity.allCities)\r\n        this.setState({ cities: this.myCommunity.allCities, selectedCity: \"\" })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clCityContainer\">\r\n                <CityGenerator onChange={this.checkBox}\r\n                    cityName={this.handleCityName}\r\n                    latitude={this.handleLatitude}\r\n                    longitude={this.handleLongitude}\r\n                    population={this.handlePopulation}\r\n                    checked={this.state.checkBox}\r\n                    createCity={this.handleCreateCity} />\r\n                <CityEnquiry allCities={this.state.cities}\r\n                    selectedCity={this.state.selectedCity}\r\n                    enquiryResponse={this.state.enquiryResponse}\r\n                    movedInMovedOut={this.state.movedInMovedOut}\r\n                    migration={this.handleMigration}\r\n                    movements={this.handleMovements} />\r\n                <div style={{ display: \"grid\", gridTemplateColumns: \"70% 30%\" }}>\r\n                    <CityCard\r\n                        cities={this.state.cities}\r\n                        retrieveCity={this.handleRetrieveCity} />\r\n                    <CityMap selectedCity={this.state.selectedCity} />\r\n                </div>\r\n                <CitySearch delete={this.handleDelete} selectToDelete={this.state.selectedCity} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CityApp","import React from 'react';\r\n\r\nclass LLControl extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clLinkedList\">\r\n                Enter Data Here: <input id=\"idInputValue\" placeholder=\"Type Data\" onChange={this.props.input} value={this.props.value}></input>\r\n                <button onClick={this.props.submit}>Submit</button>\r\n                <p>Node Position: {this.props.nodePosition}</p>\r\n                <p>Please select operation</p>\r\n                <select id=\"dropdown\" name=\"accounts\" value={this.props.selectedValue} onChange={this.props.selectChange}>\r\n                    <option value=\"Select\">Select</option>\r\n                    <option value=\"InsertFirst\">Insert First</option>\r\n                    <option value=\"InsertAtIndex\">Insert At Index</option>\r\n                    <option value=\"GetAtIndex\">Get At Index</option>\r\n                    <option value=\"RemoveAtIndex\">Remove At Index</option>\r\n                    <option value=\"ClearList\">Clear List</option>\r\n                    <option value=\"PrintList\">Print List</option>\r\n                    <option value=\"AllData\">Print All Data</option>\r\n                </select>\r\n                <button onClick={this.props.operations}>Submit</button>\r\n                <div>\r\n                    <button id=\"idBackBtn\" onClick={this.props.positionChange}>Back</button>\r\n                    <button id=\"idForwardBtn\" onClick={this.props.positionChange}>Forward</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LLControl;","import React from 'react';\r\n\r\nclass LLVisualDisplay extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"clLLVisualDisplay\">\r\n\r\n                <div id=\"idLLVisualDisplay\">\r\n                    <p>Linked List Visual Display</p>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LLVisualDisplay;","import React from 'react';\r\n\r\nclass LLDataDisplay extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"clLLDataDisplay\">\r\n                <div id=\"idLLDataDisplay\">\r\n                    {/* <p>{this.props.linkedList}</p> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LLDataDisplay;","class Node {\r\n    constructor(data, next = null) {\r\n        this.data = data;\r\n        this.next = next;\r\n    }\r\n}\r\n\r\n// const n1 = new Node(100);\r\n// console.log(n1);\r\n\r\nclass LinkedList {\r\n    constructor() {\r\n        this.head = null;\r\n        this.size = 0;\r\n    }\r\n\r\n    //We will create methods to operate the linked list as follows:\r\n    insertFirst(data) {     //This method inserts first node //\r\n        this.head = new Node(data, this.head)       //Note that 'this.head' is used as the next(pointer) argument //\r\n        this.size++\r\n    }\r\n\r\n    insertLast(data) {\r\n        let node = new Node(data);\r\n        let current;\r\n        if (this.head === null) {\r\n            this.head = node;\r\n        } else {\r\n            current = this.head;\r\n\r\n            while (current.next) {\r\n                current = current.next;\r\n            }\r\n            current.next = node;\r\n        }\r\n        this.size++\r\n    }\r\n\r\n    insertAt(data, index) {\r\n        if (index > 0 && index > this.size) {   //Takes care of 'if index is out of range' //\r\n            return;\r\n        }\r\n        if (index === 0) {  //If first index //\r\n            this.head = new Node(data, this.head);\r\n            return;\r\n        }\r\n\r\n        const node = new Node(data);\r\n        let current, previous;\r\n\r\n        //Set current to first //\r\n        current = this.head;\r\n        let count = 0;\r\n        while (count < index) {\r\n            previous = current; //Node before index\r\n            count++;\r\n            current = current.next; //Node after index\r\n        }\r\n        node.next = current;\r\n        previous.next = node;\r\n\r\n        this.size++\r\n    }\r\n\r\n    getAt(index) {\r\n        let current = this.head;\r\n        let count = 0;\r\n\r\n        while (current) {\r\n            if (count === index) {\r\n                return current.data; // Or console.log(current.data); //If you want to print to the console\r\n            }\r\n            count++;\r\n            current = current.next;\r\n        }\r\n        return null\r\n    }\r\n\r\n    removeAt(index) {\r\n        if (index > 0 && index > this.size) {\r\n            return;\r\n        }\r\n        let current = this.head;\r\n        let previous;\r\n        let count = 0;\r\n\r\n        if (index === 0) {  //Remove first index\r\n            this.head = current.next;\r\n        } else {\r\n            while (count < index) {\r\n                count++;\r\n                previous = current;\r\n                current = current.next;\r\n            }\r\n            previous.next = current.next;\r\n        }\r\n        this.size--;\r\n    }\r\n\r\n    clearList() {\r\n        this.head = null;\r\n        this.size = 0;\r\n    }\r\n\r\n    printListData() {\r\n        let current = this.head;\r\n        let list = [];  //Or let str = \"\"; //To return as string\r\n        while (current) {\r\n            list.push(current.data)    //Or str +=`${current.data}->`//Using string     //Or console.log(current.data); //If you want to print to the console\r\n            current = current.next;\r\n        }\r\n        return list;    //Or str += 'null' then 'return str'\r\n    }\r\n\r\n    allData() {     //Prints all data showing all nodes \r\n        return this.head\r\n    }\r\n}\r\nexport { Node, LinkedList };\r\n\r\n// Testing the LinkedList class created\r\n// const myLL = new LinkedList();\r\n// myLL.insertFirst(100); // Prints node with one object\r\n// myLL.insertFirst(200); // Prints node with two objects, the initial object is pushed to positon two as asigned in the parameters //\r\n","import React, { useState, useEffect } from 'react';\r\nimport LLControl from './LLControlComp';\r\nimport LLVisualDisplay from './LLVisualDisplayComp';\r\nimport LLDataDisplay from './LLDataDisplayComp';\r\nimport { Node, LinkedList } from '../../business/LinkedList.js';\r\nimport './LinkedList.css';\r\n\r\nconst myLL = new LinkedList();\r\n// console.log(myLL);\r\n\r\n\r\nfunction LinkedListApp() {\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [select, setSelect] = useState(\"\");\r\n    const [nodePosition, setNodePosition] = useState(0)\r\n    const [linkedListValues, setLinkedListValues] = useState(\"\")\r\n\r\n\r\n    const handleSubmit = () => {\r\n        myLL.insertLast(inputValue)\r\n        //console.log(myLL.printListData());\r\n        console.log(myLL);\r\n        setInputValue(\"\");\r\n    }\r\n\r\n    const handlePositionChange = (e) => {\r\n        if (e.target.id === \"idBackBtn\") {\r\n            if (nodePosition === 0) {\r\n                setNodePosition(0)\r\n            } else {\r\n                setNodePosition(nodePosition - 1)\r\n            }\r\n        } else {\r\n            setNodePosition(nodePosition + 1)\r\n        }\r\n    }\r\n\r\n    const handleOperations = () => {\r\n        console.log(select);\r\n\r\n        // printLL1();  //Prints list to the div //\r\n        if (select === \"InsertAtIndex\") {\r\n            if (nodePosition === 0) {\r\n                myLL.insertAt(inputValue, nodePosition)\r\n            } else {\r\n                myLL.insertAt(inputValue, nodePosition - 1)\r\n            }\r\n        } else if (select === \"RemoveAtIndex\") {\r\n            myLL.removeAt(nodePosition)\r\n        }\r\n        else if (select === \"GetAtIndex\") {\r\n            setLinkedListValues(myLL.getAt(nodePosition))\r\n            console.log(myLL.getAt(nodePosition));\r\n\r\n        }\r\n        else if (select === \"PrintList\") {\r\n            setLinkedListValues(myLL.printListData())\r\n            console.log(myLL.printListData());\r\n        }\r\n        else if (select === \"InsertFirst\") {\r\n            console.log(\"testing\");\r\n\r\n            myLL.insertFirst(inputValue)\r\n        }\r\n        else if (select === \"ClearList\") {\r\n            myLL.clearList()\r\n        }\r\n        else if (select === \"AllData\") {\r\n            console.log(myLL.allData());\r\n        }\r\n        setInputValue(\"\");\r\n        // console.log(myLL)\r\n    }\r\n\r\n    return (\r\n        <div className=\"clLinkedListContainer\">\r\n            <h1 id=\"h1\">Linked List</h1>\r\n            <LLControl input={(e) => setInputValue(e.target.value)} value={inputValue}\r\n                submit={() => handleSubmit()}\r\n                selectChange={(e) => setSelect(e.target.value)}\r\n\r\n                selectValue={select}\r\n                nodePosition={nodePosition}\r\n                positionChange={handlePositionChange}\r\n                operations={handleOperations}\r\n            />\r\n            <LLVisualDisplay myLinkedList={null} />\r\n            <LLDataDisplay linkedList={linkedListValues} />\r\n            {/* <LLCard /> */}\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default LinkedListApp;\r\n\r\nconst printLL1 = () => {\r\n    (function () {\r\n        // let old = console.log;\r\n        let logger = document.getElementById('idLLDataDisplay');\r\n\r\n        console.log = function () {\r\n            for (let i = 0; i < arguments.length; i++) {\r\n                if (typeof arguments[i] === 'object') {\r\n                    logger.innerHTML += (JSON && JSON.stringify ? JSON.stringify(arguments[i], undefined, 2) : arguments[i]) + '<hr />';\r\n                }\r\n                else if (typeof arguments[i] !== 'object') {\r\n                    logger.innerHTML += arguments[i] + '<hr />';\r\n                }\r\n            }\r\n            // old.apply(undefined, arguments);\r\n        }\r\n    })();\r\n\r\n}","import React from 'react';\r\nimport Animate from 'animate.css-react'\r\nimport 'animate.css/animate.css'\r\n\r\nclass FIFODisplay extends React.Component {\r\n    render() {\r\n        const queueElement = this.props.queueDetails.map((item, i) => (\r\n            <EachQueueElement item={item} key={i} elementPositionInQueue={i + 1} counter={this.props.counter} /> //Used 'elementPositionInQueue' to show the order of insertions for clarity // React would not allow use of the 'key' prop as it is reserved, so I created the 'elementPostionInQueue' prop and used the same value as that of 'key'. It is not duplicated or redundant, it's the solution recommended by react.org //\r\n        ))\r\n        return (\r\n            <div className=\"clFIFODisplay\">\r\n                <strong><p>Queue Demo</p></strong>\r\n                <div className=\"clQueueCards\">{queueElement}</div>\r\n                    Enter Data to Queue <input id=\"idDataToQueue\" value={this.props.queueElementValue} onChange={this.props.newQueueElement} />\r\n                <button id=\"idAddToQueue\" className=\"clBtn\" onClick={this.props.enqueue}>Put In Queue</button>\r\n                <button id=\"idRemoveFromQueue\" className=\"clBtn\" onClick={this.props.dequeue}>Take Out</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default FIFODisplay;\r\n\r\nfunction EachQueueElement(props) { //This component returns the queue element card\r\n    return (\r\n        <div className=\"clQueueElementCard\" >\r\n            <Animate\r\n                appear=\"slideInRight\"\r\n                durationAppear={1000}\r\n                component=\"div\" >\r\n                <button className=\"clQueueElementHover\">{props.item}⇨{props.elementPositionInQueue}</button>\r\n            </Animate>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\n//import { TransitionGroup } from 'react-transition-group';   //Library not used eventually //\r\nimport Animate from 'animate.css-react'\r\nimport 'animate.css/animate.css'\r\n\r\nclass LIFODisplay extends React.Component {\r\n    render() {\r\n        const stackElement = this.props.stackDetails.map((item, i) => (\r\n            <EachStackElement item={item} key={i} elementPositionInStack={i + 1} counter={this.props.counter} /> //Used 'elementPositionInStack' to show the order of insertions for clarity // React would not allow use of the 'key' prop as it is reserved, so I created the 'elementPostionInStack' prop and used the same value as that of 'key'. It is not duplicated or redundant, it's the solution recommended by react.org //\r\n        ))\r\n        return (\r\n            <div className=\"clLIFODisplay\">\r\n                <strong><p>Stack Demo</p></strong>\r\n                <div className=\"clStackCards\">{stackElement}</div>\r\n                    Enter Data to Stack <input id=\"idDataToStack\" value={this.props.stackElementValue} onChange={this.props.newStackElement} />\r\n                <button id=\"idAddToStack\" className=\"clBtn\" onClick={this.props.addToStack}>Put In Stack</button>\r\n                <button id=\"idPopFromStack\" className=\"clBtn\" onClick={this.props.popFromStack}>Take Out</button>\r\n                <button id=\"idPeekStack\" className=\"clBtn\" onClick={this.props.peekStack}>Peek</button>\r\n                <h6>*Click 'Peek' to see last element</h6>\r\n                <p>{`Last element is ${this.props.peeked}`}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LIFODisplay;\r\n\r\nfunction EachStackElement(props) { //This component returns the stack element card\r\n    return (\r\n        <div className=\"clStackElementCard\" >\r\n            <Animate\r\n                appear=\"slideInLeft\"\r\n                durationAppear={1000}\r\n                leave=\"slideOutRight\" //Not working. Figure out the reverse of 'appear' //\r\n                component=\"div\" >\r\n                <button className=\"clStackElementHover\">{props.item}⇨{props.elementPositionInStack}</button>\r\n            </Animate>\r\n        </div>\r\n    )\r\n};","class Stack {\r\n    constructor() {\r\n        this.storage = {};\r\n        this.size = 0;\r\n        this.allStackElements = [];\r\n    }\r\n\r\n    push(element) {\r\n        this.size++;\r\n        this.storage[this.size] = element;\r\n        this.allStackElements.push(element) //To store all stacked elements in an array\r\n    }\r\n\r\n    pop() {\r\n        let removed = this.storage[this.size]\r\n        delete this.storage[this.size]\r\n        this.size--\r\n        this.allStackElements.pop();\r\n        return removed\r\n    }\r\n\r\n    peek() {\r\n        console.log(this.storage[this.size]);\r\n        return this.storage[this.size]\r\n\r\n    }\r\n}\r\n\r\nclass Queue {\r\n    constructor() {\r\n        this.storage = {};\r\n        this.head = 0;\r\n        this.tail = 0;\r\n        this.allQueueElements = [];\r\n    }\r\n\r\n    enqueue(element) {\r\n        this.storage[this.tail] = element\r\n        this.tail++;\r\n        this.allQueueElements.push(element);    //To store all queued elements in an array\r\n    }\r\n\r\n    dequeue() {\r\n        let removed = this.storage[this.head]\r\n        delete this.storage[this.head]\r\n        this.head++\r\n        this.allQueueElements.shift();  //To manipulate all queued elements in an array\r\n        return removed\r\n    }\r\n}\r\nexport { Stack, Queue }\r\n","import React from 'react';\r\n//import React, { Fragment } from 'react'; //Didn't use the 'fragment' cos I didn't use the TransitionGroup library which it was meant for //\r\n//import { TransitionGroup } from 'react-transition-group'; //Didn't use this library anymore //\r\nimport Animate from 'animate.css-react'\r\nimport './QueueStack.css';\r\nimport FIFODisplay from './FIFODisplayComp';\r\nimport LIFODisplay from './LIFODisplayComp';\r\nimport { Stack, Queue } from '../../business/QueueStack';\r\n\r\nclass QueueStackApp extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            newStackElement: \"\",\r\n            newQueueElement: \"\",\r\n            stackContent: [],\r\n            queueContent: [],\r\n            peekElement: \"\",\r\n            count: 0   //Using this to visualize the order of insertions. Didn't use it eventually //\r\n        }\r\n        this.myStack = new Stack();\r\n        this.myQueue = new Queue();\r\n    }\r\n\r\n    handleNewStackElement = (e) => {\r\n        this.setState({ newStackElement: e.target.value })\r\n    }\r\n\r\n    handleNewQueueElement = (e) => {\r\n        this.setState({ newQueueElement: e.target.value })\r\n    }\r\n\r\n    onClickQueue = () => {  // Tucked in 'handleEnqueue' and 'increment' into this wrapper function 'onClickQueue()' to fire both functions on onClick //\r\n        this.handleEnqueue();\r\n        this.increment();\r\n    }\r\n\r\n    increment() {\r\n        this.setState({ count: this.state.count + 1 });\r\n    };\r\n\r\n    handleEnqueue = () => {\r\n        this.myQueue.enqueue(this.state.newQueueElement)\r\n        this.setState({ queueContent: this.myQueue.allQueueElements, newQueueElement: \"\" })\r\n        console.log(this.myQueue);\r\n    }\r\n\r\n    handleDequeue = () => {\r\n        this.myQueue.dequeue() //Takes no argument, just shifts (removes) the first element //\r\n        this.setState({ queueContent: this.myQueue.allQueueElements })\r\n        console.log(this.myQueue);\r\n    }\r\n\r\n    handleAddToStack = () => {\r\n        this.myStack.push(this.state.newStackElement)\r\n        this.setState({ stackContent: this.myStack.allStackElements, newStackElement: \"\" })\r\n        console.log(this.myStack);\r\n        console.log(this.state.newStackElement);\r\n    }\r\n\r\n    handlePopFromToStack = () => {\r\n        this.myStack.pop() //Takes no argument, just pops the last element //\r\n        this.setState({ stackContent: this.myStack.allStackElements })\r\n        console.log(this.myStack);\r\n    }\r\n\r\n    handlePeekStack = () => {\r\n        this.setState({ peekElement: this.myStack.peek() }) //The peek() takes no argument, just returns the last element //\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"clQueueStackContainer\">\r\n                <h1 id=\"h1\">FIFO LIFO</h1>\r\n                <div className=\"clDisplay\">\r\n                    <FIFODisplay newQueueElement={this.handleNewQueueElement}\r\n                        queueElementValue={this.state.newQueueElement}\r\n                        enqueue={this.handleEnqueue}\r\n                        // enqueue={this.onClickQueue} //created this prop 'onClickQueue' to call multiple functions on one onClick event. It is a wrapper function // Wasn't used any more cos I figured how to use the 'key' prop and extract the index (key={i}) to use as the counter //\r\n                        dequeue={this.handleDequeue}\r\n                        queueDetails={this.state.queueContent}\r\n                        counter={this.state.count} />\r\n                    <LIFODisplay newStackElement={this.handleNewStackElement}\r\n                        stackElementValue={this.state.newStackElement}\r\n                        addToStack={this.handleAddToStack}\r\n                        popFromStack={this.handlePopFromToStack}\r\n                        peekStack={this.handlePeekStack}\r\n                        peeked={this.state.peekElement}\r\n                        stackDetails={this.state.stackContent} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default QueueStackApp;","import React, { createContext } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nclass ThemeContextProvider extends React.Component {\r\n    state = {\r\n        isLightTheme: true,\r\n        light: { textcolor: \"#555\", userinterface: \"#ddd\", bkground: \"#eee\" },\r\n        dark: { textcolor: \"#ddd\", userinterface: \"#333\", bkground: \"#555\" }\r\n    }\r\n\r\n    handleToggleTheme = () => {\r\n        this.setState({ isLightTheme: !this.state.isLightTheme });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeContext.Provider value={{ ...this.state, toggleTheme: this.handleToggleTheme }}> {/*Using a spread operator here copies the entire state object into the value */}\r\n                {this.props.children} {/* This refers to the elements 'NavBar & BookList' which the ThemeContextProvider wraps in ContextAppComp */}\r\n            </ThemeContext.Provider>\r\n        );\r\n    }\r\n};\r\nexport default ThemeContextProvider;","import React, { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nclass AuthContextProvider extends React.Component {\r\n    state = {\r\n        isAuthenticated: false,\r\n    }\r\n\r\n    handleToggleAuth = () => {\r\n        this.setState({ isAuthenticated: !this.state.isAuthenticated });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthContext.Provider value={{ ...this.state, toggleAuth: this.handleToggleAuth }}> {/*Using a spread operator here copies the entire state object into the value */}\r\n                {this.props.children} {/* This refers to the elements 'NavBar & BookList' which the ThemeContextProvider wraps in ContextAppComp */}\r\n            </AuthContext.Provider>\r\n        );\r\n    }\r\n};\r\nexport default AuthContextProvider;","import React, { useContext } from 'react';      //useContext is imported cos we are using hooks and functional component //\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\n\r\n// ========== Using react hooks and functional component ========== //\r\n\r\nconst NavBar = () => {\r\n\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n    const { isAuthenticated, toggleAuth } = useContext(AuthContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return (\r\n        <nav style={{ background: theme.userinterface, color: theme.textcolor }}>\r\n            <h1>Context App</h1>\r\n            <div onClick={toggleAuth}>\r\n                {isAuthenticated ? 'Logged In' : 'Logged Out'}\r\n            </div>\r\n            <ul>\r\n                <li>Home</li>\r\n                <li>About</li>\r\n                <li>Contact</li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nexport default NavBar;\r\n\r\n// ========== Using static context with ContextProvider [Method 1] ========== //\r\n\r\n// class NavBar extends React.Component {\r\n//     static contextType = ThemeContext;\r\n//     render() {\r\n//         console.log(this.context);\r\n//         const { isLightTheme, light, dark } = this.context;\r\n//         const theme = isLightTheme ? light : dark;\r\n\r\n//         return (\r\n//             <nav style={{ background: theme.userinterface, color: theme.textcolor }}>\r\n//                 <h1>Context App</h1>\r\n//                 <ul>\r\n//                     <li>Home</li>\r\n//                     <li>About</li>\r\n//                     <li>Contact</li>\r\n//                 </ul>\r\n//             </nav>\r\n//         );\r\n//     }\r\n// };\r\n// export default NavBar;\r\n\r\n// ========== Alternatively use Context.Consumer approach ========== //\r\n\r\n// class NavBar extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <ThemeContext.Consumer>{(context) => {\r\n//                 const { isLightTheme, light, dark } = context;\r\n//                 const theme = isLightTheme ? light : dark;\r\n//                 return (\r\n//                     <nav style={{ background: theme.userinterface, color: theme.textcolor }}>\r\n//                         <h1>Context App</h1>\r\n//                         <ul>\r\n//                             <li>Home</li>\r\n//                             <li>About</li>\r\n//                             <li>Contact</li>\r\n//                         </ul>\r\n//                     </nav>\r\n//                 )\r\n//             }}\r\n//             </ThemeContext.Consumer>\r\n//         );\r\n//     }\r\n// };\r\n// export default NavBar;\r\n\r\n// ========== To consume more than one context at a time ========== //\r\n\r\n// class NavBar extends React.Component {\r\n//     render() {\r\n//         return (\r\n//             <AuthContext.Consumer>{(authContext) => (\r\n//                 <ThemeContext.Consumer>{(themeContext) => {\r\n//                     const { isAuthenticated, toggleAuth } = authContext;\r\n//                     const { isLightTheme, light, dark } = themeContext;\r\n//                     const theme = isLightTheme ? light : dark;\r\n//                     return (\r\n//                         <nav style={{ background: theme.userinterface, color: theme.textcolor }}>\r\n//                             <h1>Context App</h1>\r\n//                             <div onClick={toggleAuth}>\r\n//                                 {isAuthenticated ? 'Logged In' : 'Logged Out'}\r\n//                             </div>\r\n//                             <ul>\r\n//                                 <li>Home</li>\r\n//                                 <li>About</li>\r\n//                                 <li>Contact</li>\r\n//                             </ul>\r\n//                         </nav>\r\n//                     )\r\n//                 }}\r\n//                 </ThemeContext.Consumer>\r\n//             )}\r\n//             </AuthContext.Consumer>\r\n//         );\r\n//     }\r\n// };\r\n// export default NavBar;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\n\r\n// ========== Using react hooks and functional component ========== //\r\nconst BookList = () => {\r\n    const { isLightTheme, light, dark } = useContext(ThemeContext);\r\n    const theme = isLightTheme ? light : dark;\r\n\r\n    return (\r\n        <div className=\"clBookList\" style={{ color: theme.textcolor, background: theme.bkground }}>\r\n            <ul>\r\n                <li style={{ background: theme.userinterface }}>The Richest Man in Babylon</li>\r\n                <li style={{ background: theme.userinterface }}>The Art of War</li>\r\n                <li style={{ background: theme.userinterface }}>The Room Where It Happened</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default BookList;\r\n\r\n// ========== Using class component ========== //\r\n\r\n// class BookList extends React.Component {\r\n//     static contextType = ThemeContext;\r\n//     render() {\r\n//         const { isLightTheme, light, dark } = this.context;\r\n//         const theme = isLightTheme ? light : dark;\r\n//         return (\r\n//             <div className=\"clBookList\" style={{ color: theme.textcolor, background: theme.bkground }}>\r\n//                 <ul>\r\n//                     <li style={{ background: theme.userinterface }}>The Richest Man in Babylon</li>\r\n//                     <li style={{ background: theme.userinterface }}>The Art of War</li>\r\n//                     <li style={{ background: theme.userinterface }}>The Room Where It Happened</li>\r\n//                 </ul>\r\n//             </div>\r\n//         );\r\n//     }\r\n// };\r\n// export default BookList;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\n\r\n// ========== Using react hooks and functional component ========== //\r\n\r\nconst ThemeToggle = () => {\r\n    const { toggleTheme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <button onClick={toggleTheme}>Toggle Theme</button>\r\n    );\r\n};\r\nexport default ThemeToggle;\r\n\r\n// ========== Using class component ========== //\r\n\r\n// class ThemeToggle extends React.Component {\r\n//     static contextType = ThemeContext;\r\n//     render() {\r\n//         const { toggleTheme } = this.context;\r\n//         return (\r\n//             <button onClick={toggleTheme}>Toggle Theme</button>\r\n//         );\r\n//     }\r\n// };\r\n// export default ThemeToggle;","//This component was only added to align the appearance with other apps in the project //\r\n//It has no functionality and can be discarded //\r\nimport React from 'react';\r\n\r\nclass Heading extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"clHeading\">\r\n                <h2 id=\"h1\">Themes And Authentication</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Heading;","import React from 'react';\r\nimport NavBar from './NavBarComp.js';\r\nimport BookList from './BookListComp.js';\r\nimport ThemeContextProvider from '../../contexts/ThemeContext.js';\r\nimport ThemeToggle from './ThemeToggleComp.js';\r\nimport AuthContextProvider from '../../contexts/AuthContext.js';\r\nimport Heading from './HeadingComp.js';\r\nimport './ContextApp.css';\r\n\r\nfunction ContextApp() {\r\n    return (\r\n        <div className=\"clContextAppContainer\">\r\n            <h1>Context App</h1>\r\n            <div id=\"idContextAppContainer\">\r\n                <Heading />\r\n                <ThemeContextProvider>\r\n                    <AuthContextProvider>\r\n                        <NavBar />\r\n                        <BookList />\r\n                        <ThemeToggle />\r\n                    </AuthContextProvider>\r\n                </ThemeContextProvider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ContextApp;","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\nimport Home from './components/Home';\nimport Navbar from './components/Navbar';\nimport BankAppComp from './components/BankAppComponents/BankAppComp';\nimport CityAppComp from './components/City_CommunityAppComponents/CityAppComp';\nimport LinkedListAppComp from './components/LinkedListComponents/LinkedListAppCom';\nimport QueueStackAppComp from './components/QueueStackComponents/QueueStackAppComp';\nimport ContextAppComp from './components/ContextAppComponents/ContextAppComp.js';\n\n// function App() {\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"Welcome\"\n    }\n    this.getValue = this.getValue.bind(this)\n  }\n  getValue(event) {\n    let idHome = document.getElementById(\"home\");\n    let idGame = document.getElementById(\"game\");\n    let idAccount = document.getElementById(\"account\");\n    let idCity = document.getElementById(\"city\");\n    let idLinkedList = document.getElementById(\"linkedList\");\n    let idQueueStack = document.getElementById(\"queueStack\");\n    let idContext = document.getElementById(\"context\");\n\n    if (event.target.id === \"id-reactlogo\") {\n      this.setState({\n        value: \"This is the react icon\"\n      });\n      idHome.style.display = \"block\";\n      idGame.style.display = \"none\";\n      idAccount.style.display = \"none\";\n      idCity.style.display = \"none\";\n      idLinkedList.style.display = \"none\";\n      idQueueStack.style.display = \"none\";\n      idContext.style.display = \"none\";\n    }\n    else if (event.target.id === \"id-lego\") {\n      this.setState({\n        value: \"This is the tic-tac-toe game\"\n      });\n      idHome.style.display = \"none\";\n      idGame.style.display = \"block\";\n      idAccount.style.display = \"none\";\n      idCity.style.display = \"none\";\n      idLinkedList.style.display = \"none\";\n      idQueueStack.style.display = \"none\";\n      idContext.style.display = \"none\";\n    }\n    else if (event.target.id === \"id-menu\") {\n      this.setState({\n        value: \"This is the menu icon\"\n      });\n      idHome.style.display = \"none\";\n      idGame.style.display = \"none\";\n      idAccount.style.display = \"block\";\n      idCity.style.display = \"none\";\n      idLinkedList.style.display = \"none\";\n      idQueueStack.style.display = \"none\";\n      idContext.style.display = \"none\";\n    }\n    else if (event.target.id === \"id-maps\") {\n      this.setState({\n        value: \"This is the map icon\"\n      });\n      idHome.style.display = \"none\";\n      idGame.style.display = \"none\";\n      idAccount.style.display = \"none\";\n      idCity.style.display = \"block\";\n      idLinkedList.style.display = \"none\";\n      idQueueStack.style.display = \"none\";\n      idContext.style.display = \"none\";\n    }\n    else if (event.target.id === \"id-network\") {\n      this.setState({\n        value: \"This is the network-linkedlist icon\"\n      });\n      idHome.style.display = \"none\";\n      idGame.style.display = \"none\";\n      idAccount.style.display = \"none\";\n      idCity.style.display = \"none\";\n      idLinkedList.style.display = \"block\";\n      idQueueStack.style.display = \"none\";\n      idContext.style.display = \"none\";\n    }\n    else if (event.target.id === \"id-layers\") {\n      this.setState({\n        value: \"This is the layers-queue-stack icon\"\n      });\n      idHome.style.display = \"none\";\n      idGame.style.display = \"none\";\n      idAccount.style.display = \"none\";\n      idCity.style.display = \"none\";\n      idLinkedList.style.display = \"none\";\n      idQueueStack.style.display = \"block\";\n      idContext.style.display = \"none\";\n    }\n    else if (event.target.id === \"id-gears\") {\n      this.setState({\n        value: \"This is the react context icon\"\n      });\n      idHome.style.display = \"none\";\n      idGame.style.display = \"none\";\n      idAccount.style.display = \"none\";\n      idCity.style.display = \"none\";\n      idLinkedList.style.display = \"none\";\n      idQueueStack.style.display = \"none\";\n      idContext.style.display = \"block\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <Navbar onClick={this.getValue} />\n        </div>\n        <div id=\"home\" style={{ display: \"block\" }}>\n          <Home value={this.state.value} />\n        </div>\n        <div id=\"game\" style={{ display: \"none\" }}>\n          <Game />\n        </div>\n        <div id=\"account\" style={{ display: \"none\" }}>\n          <BankAppComp />\n        </div>\n        <div id=\"city\" style={{ display: \"none\" }}>\n          <CityAppComp />\n        </div>\n        <div id=\"linkedList\" style={{ display: \"none\" }}>\n          <LinkedListAppComp />\n        </div>\n        <div id=\"queueStack\" style={{ display: \"none\" }}>\n          <QueueStackAppComp />\n        </div>\n        <div id=\"context\" style={{ display: \"none\" }}>\n          <ContextAppComp />\n        </div>\n      </div>\n    );\n  }\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}